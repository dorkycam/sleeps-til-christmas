# Continuous Integration Workflow
# Runs tests and builds for develop branch and pull requests

name: CI

on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['develop', 'main']

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['18.x', '20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run linting
        run: yarn lint

      - name: Run tests with coverage
        run: yarn test:coverage

      - name: Upload coverage to Codecov (Node 20.x only)
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Build application
        run: yarn build

      - name: Check bundle size
        run: |
          echo "Build completed successfully!"
          echo "Bundle size check:"
          du -sh .next/ || echo "Next.js build directory not found"

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run TypeScript type check
        run: yarn tsc --noEmit

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run security audit
        run: yarn audit --level=moderate
        continue-on-error: true # Don't fail CI for moderate vulnerabilities

      - name: Check for high/critical vulnerabilities
        run: yarn audit --level=high
